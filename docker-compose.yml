version: '3.4'

services:

  # Redis Cache
  redis:
    image: redis
    ports:
      - "6379:6379"
    container_name: redis

  # Rabbit MQ
  rabbit:
    image: rabbitmq:3.6-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbit
  
  # SQL Server for Linux
  sqlserver:
    image: sqlserver
    build:
      context: ./Database
      dockerfile: Dockerfile
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Zaq123#!
    container_name: sqlserver

  # Catalog Microservice
  ecommerce.catalog.api:
    image: ecommerce/catalog.api
    build:
      context: .
      dockerfile: Services/ECommerce.Catalog.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    ports:
      - "8085:80"
    depends_on: 
      - rabbit
      - sqlserver

  # Customers Microservice
  ecommerce.customers.api:
    image: ecommerce/customers.api
    build:
      context: .
      dockerfile: Services/ECommerce.Customers.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    ports:
      - "8082:80"
    depends_on: 
      - rabbit
      - sqlserver

  # Payment Microservice
  ecommerce.payment.host:
    image: ecommerce/payment.host
    build:
      context: .
      dockerfile: Services/ECommerce.Payment.Host/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    depends_on: 
      - rabbit

# Reporting Microservice
  ecommerce.reporting.api:
    image: ecommerce/reporting.api
    build:
      context: .
      dockerfile: Services/ECommerce.Reporting.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    ports:
      - "8084:80"
    depends_on: 
      - rabbit
      - sqlserver

# Sales Microservice
  ecommerce.sales.api:
    image: ecommerce/sales.api
    build:
      context: .
      dockerfile: Services/ECommerce.Sales.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    ports:
      - "8083:80"
    depends_on: 
      - rabbit
      - sqlserver

  # Shipping Microservice
  ecommerce.shipping.host:
    image: ecommerce/shipping.host
    build:
      context: .
      dockerfile: Services/ECommerce.Shipping.Host/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    depends_on: 
      - rabbit


  ecommerce.webapp:
    image: ecommerce/webapp
    build:
      context: .
      dockerfile: Web/ECommerce.WebApp/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ORCHESTRATOR=Docker
    depends_on: 
      - ecommerce.catalog.api
      - ecommerce.customers.api
      - ecommerce.reporting.api
      - ecommerce.sales.api

